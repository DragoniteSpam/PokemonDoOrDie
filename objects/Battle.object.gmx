<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup

singleton();

stage=BattleStages.BEGIN;
animator=noone;

input_ready=true;
input_processing=noone;

input_stage=BattleInputStages.GRAND;

result=BattleStatus.CONTINUE;

teams=ds_list_create();
contestants=ds_list_create();
drawables=ds_list_create();
replacements=ds_list_create();

actions=ds_queue_create();
round_actions=ds_queue_create();
individual_actions=ds_queue_create();
priority=ds_priority_create();

sprite_hash=ds_map_create();
misc_data=ds_map_create();

// misc data defaults

misc_data[? "stat raise animations"]=0;
misc_data[? "stat fall animations"]=0;

// less important settings

view_details=false;
view_item_pocket=ItemPockets.ITEMS;

// debug stuff

debug_win=noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// battle constants

enum BattleStages {
    BEGIN,
    LOOP,
    END
}

enum BattleStatus {
    CONTINUE,
    WIN,
    DRAW,
}

enum BattleInputStages {
    GRAND,
    MOVE,
    ITEM,
    ITEM_INTERNAL,
    SWITCH,
    FLEE,
    LEVEL_STAT_DELTA,
    LEVEL_STAT_TOTAL,
    // todo other screens such as the "learn a new move" screen
    SWITCH_BEFORE_TURN,
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy_instances(teams);
ds_list_destroy(contestants);
ds_list_destroy_instances(drawables);
ds_list_destroy(replacements);

ds_queue_destroy_instances(actions);
ds_queue_destroy_instances(round_actions);
ds_queue_destroy_instances(individual_actions);
ds_priority_destroy_instances(priority);

// the more responsible way to do this would be to remember what
// sprites were created in the first place, and destroy those.
// maybe i'll do that later.
var sph=ds_map_find_first(sprite_hash);
sprite_delete(sph);
do {
    sph=ds_map_find_next(sprite_hash, sph);
    sprite_delete(sph);
} until(sph==ds_map_find_last(sprite_hash));
ds_map_destroy(sprite_hash);

ds_map_destroy(misc_data);

draw_texture_flush();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

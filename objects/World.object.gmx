<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>singleton();

message_text="";
message_text_t=0;

all_pokemon=array_create(1);
all_moves=array_create(4);

all_pokemon[0]=instance_create(0, 0, DataPokemon);

all_moves[0]=add_move("Swords Dance", Types.NORMAL, MoveCategories.STATUS, 20, 0, 0, 0, MoveTargets.SELF, "A frenetic dance to uplift the fighting spirit. This sharply raises the user's Attack stat.", ba_move_swords_dance, be_attack_raise_1, 100);
all_moves[1]=add_move("Power-Up Punch", Types.FIGHTING, MoveCategories.PHYSICAL, 20, 40, 100, 0, MoveTargets.ADJACENT, "Striking opponents over and over makes the user's fists harder. Hitting a target raises the Attack stat.", ba_move_punch, be_attack_raise_1, 100);
all_moves[2]=add_move("Metal Claw", Types.STEEL, MoveCategories.PHYSICAL, 35, 50, 95, 0, MoveTargets.ADJACENT, "The target is raked with steel claws. This may also raise the user's Attack stat.", ba_move_claw, be_attack_raise_1, 10);
all_moves[3]=add_move("Quick Attack", Types.NORMAL, MoveCategories.PHYSICAL, 30, 40, 100, 1, MoveTargets.ADJACENT, "The user lunges at the target at a speed that makes it almost invisible. This move always goes first.", ba_move_basic);

dt=0;

instance_deactivate_object(Struct);

/*
 * Settings
 */

use_scaled_exp=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// more misc constants and enums

enum vec2 {
    xx, yy
}

enum vec3 {
    xx, yy, zz
}

enum vec4 {
    r, g, b, a
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dt=delta_time/1000000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// UI stuff

draw_surface(application_surface, 0, 0);

with (Effect){
    script_execute(render);
}

var text_box_start_x=0;
var text_box_start_y=room_height-UI_TEXT_BOX_HEIGHT;

draw_rectangle_9s(spr_window9s_hgss, text_box_start_x, text_box_start_y, UI_TEXT_BOX_WIDTH, UI_TEXT_BOX_HEIGHT);

draw_set_font(FPokemonMedium);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_black);

var message_length=string_length(message_text);

draw_text_ext(text_box_start_x+UI_TEXT_BOX_OFFSET_W, text_box_start_y+UI_TEXT_BOX_OFFSET_H, string_copy(message_text, 1, message_text_t), -1, UI_TEXT_WIDTH);

for (var i=0; i&lt;ds_list_size(Battle.drawables); i++){
    with (Battle.drawables[| i].hud){
        bg_draw_hud();
    }
}

message_text_t=min(message_length, ++message_text_t);

if (message_text_t==message_length){
    // among other things, this probably needs to have a period of one second instead of two,
    // and probably should be placed underneath the final line of text
    /*if (current_second%2==0){
        draw_sprite_ext(spr_select, 0, room_width-2*UI_TEXT_BOX_OFFSET_W, room_height-2*UI_TEXT_BOX_OFFSET_H, 2, 2, 270, c_white, 1);
    }*/
    if (Battle.input_processing!=noone){
        battle_input_processing();
    }
}

/*
 * Game Maker gurus do not like game logic in the Draw event.
 * I do not like Game Maker gurus.
 */

if (Battle.input_ready){
    if (keyboard_check_pressed(vk_enter)&amp;&amp;Battle.input_processing==noone/*if input processing is going on, the action button is handled in the script that draws the options on the screen, 'cause i'm a good engineer*/){
        if (message_text_t&lt;message_length){
            message_text_t=message_length;
        // } else if (battle processing){
        } else {
            clear();
            with (Battle){
                battle_advance();
            }
        }
    }
} else {
    with (Battle){
        battle_process();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>name='Entity';

load_script=load_entity;

// for fusing all static objects such as ground tiles and houses together,
// so the computer doesn't waste time drawing every single visible Entity
// individually
batch=null;

// for things that don't fit into the above category, including but not limited
// to NPCs, things that animate, things that move and things that need special
// shaders
render=null;

// for non mobile entities, effects and animations and stuff. for mobile enties,
// movement controls.
update=null;            // main controls
update_post=null;       // executes after everything else
update_new_cell=null;   // when Entity enters a new cell
update_still=null;      // executes when not moving

update_on_exit=null;    // when another entity ends contact with you
update_on_entry=null;   // when another entity begins contact with you

// what happens when two 

// for adding /removing the entity from the map's contents structure
// (different entities will need to do different things)
contents_adder=null;
contents_remover=null;

// you can have scripts that do both, if you want to have a static thing that
// sparkles or something

// this is basically the opposite of game maker's persistent flag, but doesn't
// use any built-in systems
deleteable=true;

xx=0;
yy=0;
zz=0;
off_xx=0;
off_yy=0;
off_zz=0;
rot_xx=0;
rot_yy=0;
rot_zz=0;
scale_xx=1;
scale_yy=1;
scale_zz=1;
target_xx=xx;
target_yy=yy;
target_zz=zz;
previous_xx=xx;
previous_yy=yy;
previous_zz=zz;

object_events=ds_list_create();

// don't want to use the built-in "solid" variable since that might cause
// things to break unexpectedly
am_solid=true;

var inventory_size=array_length_1d(Database.all_items);
inventory=array_create(inventory_size);

// list(s) of [guid, quantity]
for (var i=0; i&lt;inventory_size; i++){
    inventory[i]=ds_list_create();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// this caused problems involving not firing in the editor. if
// causes problems by not firing here (i.e. a memory leak, etc)
// do the entity_destroy() thing that the editor does.

ds_list_destroy(object_events);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Struct</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

name='Base Map';
internal_name='BASEMAP';
summary='you can walk around on it and stuff';

xx=0;
yy=0;
zz=0;

// Since maps are basically three-dimensional arrays, the amount of
// space they take up goes up pretty quickly (width*height*depth*the
// size of whatever data's in it). In the future it's probably a
// good idea to only store the active one(s) in memory and load/delete
// them when necessary, or at the very least the data in the "contents"
// structures.
contents_static=noone;
contents_dynamic=noone;

// it turns out iterating over every element in a 3D structure to draw
// them is unreasonably inefficient, so since most of the slots in the
// 3D structure are probably going to be air anyway we're going to keep
// a (smaller) parallel list of things that actually exist in the map
list_dynamic=noone;

// a vertex buffer
statics=vertex_create_buffer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (contents_static!=noone){
    var array_static, array_dynamic;
    
    for (var i=0; i&lt;xx; i++){
        for (var j=0; j&lt;yy; j++){
            array_static=contents_static[# i, j];
            array_dynamic=contents_dynamic[# i, j];
            for (var k=0; k&lt;zz; k++){
                if (array_static[k]!=noone){
                    instance_activate_object(array_static[k]);
                    instance_destroy(array_static[k]);
                }
                if (array_dynamic[k]!=noone){
                    if (array_dynamic[k].deleteable){
                        instance_activate_object(array_dynamic[k]);
                        instance_destroy(array_dynamic[k]);
                    }
                }
            }
        }
    }
    
    ds_grid_destroy(contents_static);
    ds_grid_destroy(contents_dynamic);
    ds_list_destroy(list_dynamic);
}

vertex_delete_buffer(statics);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
